export function rotateCanvas(canvas: HTMLCanvasElement, degrees: number): void {
  const ctx = canvas.getContext('2d')!;
  const centerX = canvas.width / 2;
  const centerY = canvas.height / 2;
  
  ctx.translate(centerX, centerY);
  ctx.rotate((degrees * Math.PI) / 180);
  ctx.translate(-centerX, -centerY);
}

export function scaleCanvas(canvas: HTMLCanvasElement, scaleX: number, scaleY: number): void {
  const ctx = canvas.getContext('2d')!;
  ctx.scale(scaleX, scaleY);
}

export function flipHorizontal(canvas: HTMLCanvasElement): void {
  const ctx = canvas.getContext('2d')!;
  ctx.scale(-1, 1);
  ctx.translate(-canvas.width, 0);
}

export function flipVertical(canvas: HTMLCanvasElement): void {
  const ctx = canvas.getContext('2d')!;
  ctx.scale(1, -1);
  ctx.translate(0, -canvas.height);
}

export function skewCanvas(canvas: HTMLCanvasElement, skewX: number, skewY: number): void {
  console.log('Skewing canvas:', skewX, skewY);
}

export function resizeCanvas(canvas: HTMLCanvasElement, newWidth: number, newHeight: number): void {
  const imageData = canvas.getContext('2d')!.getImageData(0, 0, canvas.width, canvas.height);
  canvas.width = newWidth;
  canvas.height = newHeight;
  canvas.getContext('2d')!.putImageData(imageData, 0, 0);
}

export function cropCanvas(canvas: HTMLCanvasElement, bounds: { x: number; y: number; width: number; height: number }): void {
  const ctx = canvas.getContext('2d')!;
  const imageData = ctx.getImageData(bounds.x, bounds.y, bounds.width, bounds.height);
  canvas.width = bounds.width;
  canvas.height = bounds.height;
  ctx.putImageData(imageData, 0, 0);
}