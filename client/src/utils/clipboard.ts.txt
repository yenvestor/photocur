export class CanvasClipboard {
  private static clipboardData: ImageData | null = null;

  static copy(canvas: HTMLCanvasElement, bounds?: { x: number; y: number; width: number; height: number }): void {
    const ctx = canvas.getContext('2d')!;
    if (bounds) {
      this.clipboardData = ctx.getImageData(bounds.x, bounds.y, bounds.width, bounds.height);
    } else {
      this.clipboardData = ctx.getImageData(0, 0, canvas.width, canvas.height);
    }
  }

  static cut(canvas: HTMLCanvasElement, bounds?: { x: number; y: number; width: number; height: number }): void {
    this.copy(canvas, bounds);
    this.clearCanvas(canvas, bounds);
  }

  static async paste(canvas: HTMLCanvasElement, x?: number, y?: number): Promise<boolean> {
    if (!this.clipboardData) return false;
    
    const ctx = canvas.getContext('2d')!;
    const pasteX = x ?? 0;
    const pasteY = y ?? 0;
    
    ctx.putImageData(this.clipboardData, pasteX, pasteY);
    return true;
  }

  static clearCanvas(canvas: HTMLCanvasElement, bounds?: { x: number; y: number; width: number; height: number }): void {
    const ctx = canvas.getContext('2d')!;
    if (bounds) {
      ctx.clearRect(bounds.x, bounds.y, bounds.width, bounds.height);
    } else {
      ctx.clearRect(0, 0, canvas.width, canvas.height);
    }
  }

  static clear(): void {
    this.clipboardData = null;
  }
}